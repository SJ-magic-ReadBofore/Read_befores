/************************************************************
************************************************************/
■base classのconstructorで仮想関数を呼んではいけない
	base classが生成される段階では、派生classの実態がない.
	故に派生class内で定義された仮想関数がまだ実体化されていないのだ.
	
	純粋仮想関数の場合は、runtime error.
	通常の仮想関数の場合は、base classのそれがcallされてしまう.
	
	このため、本当は、base classのconstructorに書きたかった初期化内容を派生class側のconstructorに書かなければならないことがある.
	base classには、これがきちんと実行されているかのmethodを用意するのがいい.
	
	sample
		void THREAD_BASE::check_if_setup_ok_in_DerivedClass()
		{
			if(fp_Rec == NULL) { ERROR_MSG(); std::exit(1); }
		}
		
■コピーコンストラクタ、代入演算子、デストラクタ
	http://tercel-tech.hatenablog.com/entry/2012/11/03/003302
	
	contents
		・	値オブジェクトを作成するときは「ビッグスリー」原則に従うことが重要である.
			->デストラクタ、コピーコンストラクタ、代入演算子の3つのメンバ関数は常に共存する必要がある
			
		・	さらに、間違いが起こらないように、中でnewをするクラスはコピーを禁止することを義務づけよう。いっそ、作るクラス全てを全部コピー禁止にしてもいい。
		

	■コピー禁止を徹底させるNoncopyableクラス
		http://marupeke296.com/DXCLS_Noncopyable.html
	
	■singleton
		my Github
			https://github.com/SJ-magic-study/study__Singleton
		
		Singleton
			http://marupeke296.com/DP_Singleton.html
		
		wikipedia
			https://ja.wikipedia.org/wiki/Singleton_%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3#C.2B.2B.E3.81.A7.E3.81.AE.E5.AE.9F.E8.A3.85.E4.BE.8B
	

■zeroでの割り算に注意

■
■
■
■
■
■
■
■
■
■



